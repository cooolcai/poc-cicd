<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.czm</groupId>
	<artifactId>eureka_demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>eureka_demo</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>2020.0.4</spring-cloud.version>
		<!--	参照新增docker属性指定镜像版本号-->
		<docker.tag.version>1.0.26</docker.tag.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
<!--				<version>Dalston.RELEASE</version>-->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

<!--	参照新增docker仓库标签-->
	<profiles>
	<profile>
		<id>test</id>
		<properties>
			<docker.server.addr>local.harbor/test/</docker.server.addr>
			<docker.server.id>local.harbor</docker.server.id>
			<docker.directory.path>dockertest</docker.directory.path>
<!--			<docker.tag.version>1.0.0</docker.tag.version>-->
			<profile.active>test</profile.active>
			<username>admin</username>
			<password>Ja123456789</password>
		</properties>
	</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
<!--			参照新增docker打包插件-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<skipDocker>false</skipDocker>
					<forceTags>true</forceTags>
					<pushImage>true</pushImage>
					<buildArgs>
						<jarfile>${project.build.finalName}.jar</jarfile>
					</buildArgs>
					<!--<useConfigFile>true</useConfigFile>-->
<!--					出现找不到docker server.id的情况-->
					<serverId>${docker.server.id}</serverId>
					<imageName>${docker.server.addr}${project.artifactId}:${docker.tag.version}</imageName>
<!--					<imageName>${docker.server.addr}${project.artifactId}:${docker.tag.version}</imageName>-->
					<dockerDirectory>${docker.directory.path}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
				<executions>
					<execution>
						<id>builddocker</id>
						<goals>
							<goal>builddocker</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
